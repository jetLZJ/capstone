events {}
http {
    upstream api_backend {
        server flaskserver:5000;
    }

    server {
        listen 8080;

        # API requests should go to the Flask backend. Use proxy_pass without
        # an extra path so requests like /api/menu map to http://flaskserver:5000/api/menu
        location /api/ {
            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Authorization $http_authorization;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            # Rewrite any absolute Location headers returned by Flask so the
            # browser doesn't receive redirects to internal hostnames.
            proxy_redirect http://localhost/ /;
            proxy_redirect http://proxyserver/ /;
            proxy_redirect default;
        }

        # Health check for Flask backend
        location /health {
            proxy_pass http://api_backend/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # For ping endpoint
        location /ping {
            proxy_pass http://api_backend/ping;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}